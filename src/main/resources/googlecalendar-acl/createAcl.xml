<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template name="createAcl" xmlns="http://ws.apache.org/ns/synapse">
    <!-- Required parameters -->
    <parameter name="calendarId" description="Calendar identifier."/>
    <parameter name="role" description="The role assigned to the scope."/>
    <parameter name="scope"
               description="The scope of the rule.An Object containing type and value attributes."/>

    <!-- Optional parameters -->
    <parameter name="fields"
               description="Selector specifying which fields to include in a partial response."/>
    <parameter name="etag" description="ETag of the resource."/>
    <parameter name="id" description="Identifier of the ACL rule."/>
    <parameter name="kind" description="Type of the resource. Sample value calendar#aclRule"/>

    <sequence>
        <property name="uri.var.calendarId" expression="$func:calendarId"/>
        <property name="uri.var.role" expression="$func:role"/>
        <property name="uri.var.scope" expression="$func:scope"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.etag" expression="$func:etag"/>
        <property name="uri.var.id" expression="$func:id"/>
        <property name="uri.var.kind" expression="$func:kind"/>

        <!-- Building request with mandatory params -->
        <payloadFactory media-type="json">
            <format>
                {
                "role": "$1",
                "scope": $2
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.role"/>
                <arg expression="$ctx:uri.var.scope"/>
            </args>
        </payloadFactory>

        <script language="js">
            <![CDATA[
        		//url parameters
        		var calendarId = encodeURIComponent(mc.getProperty("uri.var.calendarId"));
        		var fields = mc.getProperty("uri.var.fields");
        				        
		        //request body param variables
				var etag = mc.getProperty('uri.var.etag');
				var id= mc.getProperty('uri.var.id');
				var kind= mc.getProperty('uri.var.kind');			        		 
		        
		        //url param processing start
		       	mc.setProperty('uri.var.calendarId', calendarId);

		        var urlParamString = '';
		           
				if (fields != null && fields != "") {
					urlParamString = '?fields=' + encodeURIComponent(fields);
				}
				
				mc.setProperty('uri.var.urlParamString', urlParamString);
				//url param processing end
		        	        		       		       			         				
				//request body param processing start
				var payload = mc.getPayloadJSON();				
								
				if (etag != null && etag != "") {
					payload.etag = etag;
				}
				
				if (id != null && id != "") {
					payload.id = id;
				}
				
				if (kind != null && kind != "") {
					payload.kind = kind;
				}
																		
				mc.setPayloadJSON(payload);
				//request body param processing end
				
			]]>
        </script>

        <call>
            <endpoint>
                <http method="post"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/calendar/v3/calendars/{uri.var.calendarId}/acl{uri.var.urlParamString}"/>
            </endpoint>
        </call>

        <!-- Remove response custom header information -->
        <header name="X-Frame-Options" scope="transport" action="remove"/>
        <header name="X-XSS-Protection" scope="transport" action="remove"/>
        <header name="Alternate-Protocol" scope="transport" action="remove"/>
        <header name="X-Content-Type-Options" scope="transport" action="remove"/>

    </sequence>

</template>