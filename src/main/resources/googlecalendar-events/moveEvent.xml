<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<template name="moveEvent" xmlns="http://ws.apache.org/ns/synapse">
    <!-- Required parameters -->
    <parameter name="calendarId" description="Calender Identifier"/>
    <parameter name="eventId" description="Event Identifier"/>
    <parameter name="destination"
               description="Calendar identifier of the target calendar where the event is to be moved to"/>
    <!-- Optional parameters -->
    <parameter name="sendNotifications"
               description="Whether to send notifications about the change of the event's organizer"/>
    <parameter name="fields" description="Fileds allows selector to specify which fields to be
               included in a partial response,if not specified in default will provide all fields in responce"/>
    <sequence>
        <property name="uri.var.calendarId" expression="$func:calendarId"/>
        <property name="uri.var.eventId" expression="$func:eventId"/>
        <property name="uri.var.destination" expression="$func:destination"/>
        <property name="uri.var.sendNotifications" expression="$func:sendNotifications"/>
        <property name="uri.var.fields" expression="$func:fields"/>

        <!-- Clear original request payload-->
        <payloadFactory media-type="json">
            <format>
                {}
            </format>
        </payloadFactory>

        <script language="js">
            <![CDATA[
		
		//url param variables
  		var calendarId = encodeURIComponent(mc.getProperty("uri.var.calendarId"));
  		var eventId = encodeURIComponent(mc.getProperty("uri.var.eventId"));
		var destination = mc.getProperty('uri.var.destination');
		var sendNotifications = mc.getProperty('uri.var.sendNotifications');
		var fields = mc.getProperty('uri.var.fields');
		
		//url param processing start				
		mc.setProperty('uri.var.calendarId', calendarId);
		mc.setProperty('uri.var.eventId', eventId);
		
		var urlParamString = '?destination=' + encodeURIComponent(destination);

		if (sendNotifications != null && sendNotifications != "") {
			urlParamString += '&sendNotifications=' + encodeURIComponent(sendNotifications);
		}
		
		if (fields != null && fields != "") {
			urlParamString += '&fields=' + encodeURIComponent(fields);
		}
					
		mc.setProperty('uri.var.encodedParams', urlParamString);
		 
		]]>
        </script>

        <call>
            <endpoint>
                <http method="post"
                      uri-template="legacy-encoding:{uri.var.apiUrl}/calendar/v3/calendars/{uri.var.calendarId}/events/{uri.var.eventId}/move{uri.var.encodedParams}"/>
            </endpoint>
        </call>

        <!-- Remove response's custom header information -->
        <header name="X-Frame-Options" scope="transport" action="remove"/>
        <header name="X-XSS-Protection" scope="transport" action="remove"/>
        <header name="Alternate-Protocol" scope="transport" action="remove"/>
        <header name="X-Content-Type-Options" scope="transport" action="remove"/>

    </sequence>
</template>